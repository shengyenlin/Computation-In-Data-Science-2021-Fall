census <- read.csv(file = 'HW1_census-tract_data.csv')
head(census)
#(a)
census <- read.csv(file = 'HW1_census-tract_data.csv', header = TRUE, fill = FALSE)
head(census)
census$Median.value.home..10.000s.
#(a)
census <- read.csv(file = 'HW1_census-tract_data.csv', header = TRUE, fill = FALSE, row.names = 1)
census$Median.value.home..10.000s.
head(census)
#上課內容
X_bar = round(apply(census, 2, mean), 2)
X_bar
S <- round(var(census), 3)
S
eigen_original <- eigen(S)
eigen_original
?var
#(a)
census <- read.csv(file = 'HW1_census-tract_data.csv', header = TRUE, fill = FALSE, row.names = 1)
head(census)
census$Median.value.home..10.000s. <- census$Median.value.home..10.000s. * 10
#(a)
census <- read.csv(file = 'HW1_census-tract_data.csv', header = TRUE, fill = FALSE, row.names = 1)
#上課內容
census <- read.csv(file = 'HW1_census-tract_data.csv', header = TRUE, fill = FALSE, row.names = 1)
X_bar = round(apply(census, 2, mean), 2)
X_bar
S <- round(var(census), 3)
S
#(a)
census <- read.csv(file = 'HW1_census-tract_data.csv', header = TRUE, fill = FALSE, row.names = 1)
head(census)
census$Median.value.home..10.000s. <- census$Median.value.home..10.000s. * 10
S <- round(var(census), 3)
S
S
#上課內容
census <- read.csv(file = 'HW1_census-tract_data.csv', header = TRUE, fill = FALSE, row.names = 1)
X_bar = round(apply(census, 2, mean), 2)
X_bar
S <- round(var(census), 3)
S
#(a)
census <- read.csv(file = 'HW1_census-tract_data.csv', header = TRUE, fill = FALSE, row.names = 1)
census$Median.value.home..10.000s. <- census$Median.value.home..10.000s. * 10
S <- round(var(census), 3)
S
census$Median.value.home..10.000s. <- census$Median.value.home..10.000s. * 100
S <- round(var(census), 3)
S
#(a)
census <- read.csv(file = 'HW1_census-tract_data.csv', header = TRUE, fill = FALSE, row.names = 1)
census$Median.value.home..10.000s. <- census$Median.value.home..10.000s. * 100
S <- round(var(census), 3)
S
source('D:/Coding/NTU/110-1/ComputationInDataScience/PartII/B06702064.R', encoding = 'UTF-8', echo=TRUE)
S <- round(var(census), 3)
S
#上課內容
census <- read.csv(file = 'HW1_census-tract_data.csv', header = TRUE, fill = FALSE, row.names = 1)
S_origin <- round(var(census), 3)
S_origin
S_100 <- round(var(census), 3)
census$Median.value.home..10.000s. <- census$Median.value.home..10.000s. * 100
S_100 <- round(var(census), 3)
S_100
eigen_100 <- eigen(S_100)
eigen_100$values
eigen_original <- eigen(S) #do PCA on covariance matrix
eigen_original
#上課內容
census <- read.csv(file = 'HW1_census-tract_data.csv', header = TRUE, fill = FALSE, row.names = 1)
X_bar = round(apply(census, 2, mean), 2)
X_bar
S_origin <- round(var(census), 3)
S_origin
eigen_original <- eigen(S_origin) #do PCA on covariance matrix
eigen_original
S_100 <- round(var(census), 3)
S_100
eigen_100 <- eigen(S_100)
census$Median.value.home..10.000s. <- census$Median.value.home..10.000s. * 100
S_100 <- round(var(census), 3)
S_100
eigen_100 <- eigen(S_100)
eigen_100$values
round(eigen_100$vectors, 3)
eigen_100$values[0] / eigen_100$values
eigen_100$values[0] / sum(eigen_100$values)
eigen_100$values[1] / sum(eigen_100$values)
eigen_100$values[1]
eigen_100$values[1] / sum(eigen_100$values)
eigen_100$values[2] / sum(eigen_100$values)
eigen_original
eigen_original$vectors
eigen_original$vectors$1
eigen_original$vectors[1, ]
eigen_original$vectors[, 1]
?corr
?var
census
var(eigen_original$vectors[, 1], census$Total.poupulation.thousands.)
#(b)
eigen_100$values[1] / sum(eigen_100$values)
eigen_100$values[2] / sum(eigen_100$values)
census[1, ]
round(eigen_100$vectors, 3)
round(eigen_100$vectors, 3)
PC <- eigen_original %*% census
census
PC <- eigen_original %*% data.matrix(census)
eigen_original
type(eigen_original)
PC <- eigen_original$vectors %*% data.matrix(census)
PC <- eigen_original$vectors %*% census
data.matrix(census)
PC <- eigen_original$vectors %*% t(data.matrix(census))
PC
t(data.matrix(census))
census
census
#上課內容
census <- read.csv(file = 'HW1_census-tract_data.csv', header = TRUE, fill = FALSE, row.names = 1)
#上課內容
census <- read.csv(file = 'HW1_census-tract_data.csv', header = TRUE, fill = FALSE, row.names = 1)
census
X_bar = round(apply(census, 2, mean), 2)
X_bar
S_origin <- round(var(census), 3)
S_origin
eigen_original <- eigen(S_origin) #do PCA on covariance matrix
eigen_original
PC <- eigen_original$vectors %*% t(data.matrix(census))
PC
PC[1, ]
census
var(PC[1, ], census$Total.poupulation.thousands.)
?var
cor(PC[1, ], census$Total.poupulation.thousands.)
cor(PC[2, ], census$Total.poupulation.thousands.)
cor(PC[3, ], census$Total.poupulation.thousands.)
PC
Z <- apply(census, 2, scale)
Z
census
PC <- eigen_original$vectors %*% t(data.matrix(Z))
cor(PC[1, ], census$Total.poupulation.thousands.)
cov(PC[1, ], census$Total.poupulation.thousands.)
var(PC[1, ], census$Total.poupulation.thousands.)
cor(PC[1, ], census$Total.poupulation.thousands.)
eigen_original
eigen_original$vectors
eigen_original$vectors[2, 5]
eigen_original$vectors[1, ]
cor(PC[, 1], census$Total.poupulation.thousands.)
PC[, 1]
eigen_original$vectors
eigen_original$vectors[, 1]
PC
PC
var(PC)
var(t(PC))
eigen_original$vectors
PC <- t(eigen_original$vectors) %*% t(data.matrix(Z))
PC
var(PC)
var(t(PC))
dim(PC)
dim(t(PC))
PC <- t(eigen_original$vectors) %*% t(data.matrix(census))
PC
var(t(PC))
cor(PC[, 1], census$Total.poupulation.thousands.)
PC
cor(PC[1, ], census$Total.poupulation.thousands.)
cor(PC[2, ], census$Total.poupulation.thousands.)
cor(PC[1, ], census$Total.poupulation.thousands.)
census_100 = census.copy()
census_100 = copy(census)
census_100 = census
census_100$Median.value.home..10.000s. <- census_100$Median.value.home..10.000s. * 100
census
S_100 <- round(var(census_100), 3)
S_100
eigen_100 <- eigen(S_100)
eigen_100$values
round(eigen_100$vectors, 3)
#(b)
eigen_100$values[1] / sum(eigen_100$values)
eigen_100$values[2] / sum(eigen_100$values)
eigen_100$vectors
#(c)
PC <- t(eigen_100$vectors) %*% t(data.matrix(census_100))
cor(PC, census_100)
cov(PC, census_100)
cor(PC[1, ], census$Total.poupulation.thousands.)
PC
census_100
cov(PC, t(census_100)
cov(PC, t(census_100))
cov(PC, t(census_100))
cov(t(PC), census_100)
#上課內容
census <- read.csv(file = 'HW1_census-tract_data.csv', header = TRUE, fill = FALSE, row.names = 1)
Z <- apply(census, 2, scale)
X_bar = round(apply(census, 2, mean), 2)
X_bar
S_origin <- round(var(census), 3)
S_origin
eigen_original <- eigen(S_origin) #do PCA on covariance matrix
eigen_originalPC
eigen_original
PC <- t(eigen_original$vectors) %*% t(data.matrix(census))
cor(t(PC), census$Total.poupulation.thousands.)
cor(t(PC), census)
cor(PC, t(census))
t(
123
)
cor(t(PC), census)
PC
eigen_original
#(a)
census <- read.csv(file = 'HW1_census-tract_data.csv', header = TRUE, fill = FALSE, row.names = 1)
census_100 = census
census_100$Median.value.home..10.000s. <- census_100$Median.value.home..10.000s. * 100
S_100 <- round(var(census_100), 3)
S_100
eigen_100 <- eigen(S_100)
eigen_100$values
round(eigen_100$vectors, 3)
#(b)
eigen_100$values[1] / sum(eigen_100$values)
eigen_100$values[2] / sum(eigen_100$values)
#(c)
PC_100 <- t(eigen_100$vectors) %*% t(data.matrix(census_100))
cov(t(PC_100), census_100)
cov(t(PC_100), census_100)
cov(t(PC_100), census_100)
cor(t(PC), census)
#上課內容
census <- read.csv(file = 'HW1_census-tract_data.csv', header = TRUE, fill = FALSE, row.names = 1)
Z <- apply(census, 2, scale)
X_bar = round(apply(census, 2, mean), 2)
X_bar
S_origin <- round(var(census), 3)
S_origin
eigen_original <- eigen(S_origin) #do PCA on covariance matrix
eigen_original
PC <- t(eigen_original$vectors) %*% t(data.matrix(census))
cor(t(PC), census)
t(corr)
corr <- cov(t(PC_100), census_100)
t(corr)
t(corr)
corr <- cor(t(PC), census)
t(corr)
corr_100 <- cov(t(PC_100), census_100)
t(corr)
t(corr_100)
#(c)
PC_100 <- t(eigen_100$vectors) %*% t(data.matrix(census_100))
corr_100 <- cov(t(PC_100), census_100)
t(corr_100)
PC <- t(eigen_original$vectors) %*% t(data.matrix(Z))
census
PC <- t(eigen_original$vectors) %*% t(data.matrix(census))
corr <- cor(t(PC), Z)
t(corr)
Z_100 <- apply(census_100, 2, scale)
Z_100
census_200
census_100
Z
Z_100
#(c)
PC_100 <- t(eigen_100$vectors) %*% t(data.matrix(Z_100))
corr_100 <- cov(t(PC_100), census_100)
t(corr_100)
#(c)
PC_100 <- t(eigen_100$vectors) %*% t(data.matrix(census_100))
corr_100 <- cov(t(PC_100), census_100)
t(corr_100)
#(c)
PC_100 <- t(eigen_100$vectors) %*% t(data.matrix(Z_100))
corr_100 <- cov(t(PC_100), census_100)
t(corr_100)
corr_100 <- cov(t(PC_100), Z_100)
t(corr_100)
PC <- t(eigen_original$vectors) %*% t(data.matrix(Z))
corr <- cor(t(PC), Z)
t(corr)
corr <- cor(t(PC), census)
t(corr)
PC <- t(eigen_original$vectors) %*% t(data.matrix(census))
corr <- cor(t(PC), census)
t(corr)
corr <- cor(t(PC), Z)
t(corr)
PC <- t(eigen_original$vectors) %*% t(data.matrix(Z))
corr <- cor(t(PC), census)
t(corr)
PC <- t(eigen_original$vectors) %*% t(data.matrix(census))
corr <- cor(t(PC), census)
t(corr)
#(c)
PC_100 <- t(eigen_100$vectors) %*% t(data.matrix(census_100))
corr_100 <- cov(t(PC_100), Z_100)
t(corr_100)
corr_100 <- cov(t(PC_100), census_100)
t(corr_100)
#(c)
PC_100 <- t(eigen_100$vectors) %*% t(data.matrix(Z_100))
corr_100 <- cov(t(PC_100), Z_100)
t(corr_100)
corr_100 <- cor(t(PC_100), Z_100)
corr_100 <- cor(t(PC_100), Z_100))
corr_100 <- cor(t(PC_100), Z_100)
t(corr_100)
corr_100 <- cor(t(PC_100), census_100)
#(c)
PC_100 <- t(eigen_100$vectors) %*% t(data.matrix(Z_100))
corr_100 <- cor(t(PC_100), census_100)
t(corr_100)
#(c)
PC_100 <- t(eigen_100$vectors) %*% t(data.matrix(census_100))
corr_100 <- cor(t(PC_100), census_100)
t(corr_100)
PC <- t(eigen_original$vectors) %*% t(data.matrix(Z))
corr <- cor(t(PC), census)
t(corr)
PC <- t(eigen_original$vectors) %*% t(data.matrix(census))
corr <- cor(t(PC), census)
t(corr)
#(c)
PC_100 <- t(eigen_100$vectors) %*% t(data.matrix(census_100))
corr_100 <- cor(t(PC_100), census_100)
t(corr_100)
#(c)
PC_100 <- t(eigen_100$vectors) %*% t(data.matrix(Z_100))
corr_100 <- cor(t(PC_100), census_100)
t(corr_100)
PC <- t(eigen_original$vectors) %*% t(data.matrix(Z))
corr <- cor(t(PC), Z)
t(corr)
census
census
census
PC <- t(eigen_original$vectors) %*% t(data.matrix(census))
corr <- cor(t(PC), Z)
t(corr)
census
census
census
PC <- t(eigen_original$vectors) %*% t(data.matrix(census))
corr <- cor(t(PC), census)
t(corr)
PC <- t(eigen_original$vectors) %*% t(data.matrix(Z))
corr <- cor(t(PC), census)
t(corr)
PC <- t(eigen_original$vectors) %*% t(data.matrix(census))
corr <- cor(t(PC), Z)
t(corr)
corr <- cor(t(PC), census)
PC <- t(eigen_original$vectors) %*% t(data.matrix(census))
corr <- cor(t(PC), census)
t(corr)
#(c)
PC_100 <- t(eigen_100$vectors) %*% t(data.matrix(census_100))
corr_100 <- cor(t(PC_100), census_100)
t(corr_100)
corr_100 <- cor(t(PC_100), Z_100)
t(corr_100)
PC <- t(eigen_original$vectors) %*% t(data.matrix(census))
corr <- cor(t(PC), census)
t(corr)
#(a)
census <- read.csv(file = 'HW1_census-tract_data.csv', header = TRUE, fill = FALSE, row.names = 1)
census_100 <- census
census_100$Median.value.home..10.000s. <- census_100$Median.value.home..10.000s. * 100
Z_100 <- apply(census_100, 2, scale)
Z_100
S_100 <- round(var(census_100), 3)
S_100
eigen_100 <- eigen(S_100)
eigen_100$values
round(eigen_100$vectors, 3)
#(b)
eigen_100$values[1] / sum(eigen_100$values)
eigen_100$values[2] / sum(eigen_100$values)
#(c)
PC_100 <- t(eigen_100$vectors) %*% t(data.matrix(census_100))
corr_100 <- cor(t(PC_100), Z_100)
t(corr_100)
#(a)
census <- read.csv(file = 'HW1_census-tract_data.csv', header = TRUE, fill = FALSE, row.names = 1)
census_100 <- census
census_100$Median.value.home..10.000s. <- census_100$Median.value.home..10.000s. * 100
Z_100 <- apply(census_100, 2, scale)
Z_100
S_100 <- round(var(census_100), 3)
S_100
eigen_100 <- eigen(S_100)
eigen_100$values
round(eigen_100$vectors, 3)
round(eigen_100$vectors, 3)
eigen_100$values[1]
eigen_100$values[2] / sum(eigen_100$values)
#(b)
eigen_100$values[1] / sum(eigen_100$values)
eigen_100$values[2] / sum(eigen_100$values)
#(c)
PC_100 <- t(eigen_100$vectors) %*% t(data.matrix(census_100))
corr_100 <- cor(t(PC_100), Z_100)
t(corr_100)
#(a)
census <- read.csv(file = 'HW1_census-tract_data.csv', header = TRUE, fill = FALSE, row.names = 1)
census_100 <- census
census_100$Median.value.home..10.000s. <- census_100$Median.value.home..10.000s. * 100
Z_100 <- apply(census_100, 2, scale)
Z_100
S_100 <- round(var(census_100), 3)
S_100
#(a)
census <- read.csv(file = 'HW1_census-tract_data.csv', header = TRUE, fill = FALSE, row.names = 1)
census_100 <- census
census_100$Median.value.home..10.000s. <- census_100$Median.value.home..10.000s. * 100
Z_100 <- apply(census_100, 2, scale)
Z_100
S_100 <- round(var(census_100), 3)
S_100
S_100
t(corr_100)
S_100
S_100
